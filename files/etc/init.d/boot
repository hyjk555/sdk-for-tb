#!/bin/sh /etc/rc.common
# Copyright (C) 2006-2011 OpenWrt.org

START=10
STOP=98

uci_apply_defaults() {
	. /lib/functions/system.sh

	cd /etc/uci-defaults || return 0
	files="$(ls)"
	[ -z "$files" ] && return 0
	mkdir -p /tmp/.uci
	for file in $files; do
		( . "./$(basename $file)" ) && rm -f "$file"
	done
	uci commit
}

boot() {
	. /lib/netifd/cfg_set.sh
	. /lib/netifd/load_wifi_module.sh

	[ -f /proc/mounts ] || /sbin/mount_root
	[ -f /proc/jffs2_bbc ] && echo "S" > /proc/jffs2_bbc
	[ -f /proc/net/vlan/config ] && vconfig set_name_type DEV_PLUS_VID_NO_PAD

	mkdir -p /var/run
	mkdir -p /var/log
	mkdir -p /var/lock
	mkdir -p /var/state
	mkdir -p /tmp/.uci
	chmod 0700 /tmp/.uci
	touch /var/log/wtmp
	touch /var/log/lastlog
	touch /tmp/resolv.conf.auto
	ln -sf /tmp/resolv.conf.auto /tmp/resolv.conf
	grep -q debugfs /proc/filesystems && /bin/mount -o noatime -t debugfs debugfs /sys/kernel/debug
	[ "$FAILSAFE" = "true" ] && touch /tmp/.failsafe

	

	mkdir -p /factory
#	mkdir -p /user

	mount -t ext4 /dev/mmcblk0p3 /factory
#	mount -t ext4 /dev/mmcblk0p3 /user
	
	factory_user_set
#	mp_disk write

#	echo /dev/mmcblk0p4 >/sys/devices/platform/jz-dwc2/dwc2/gadget/gadget-lun0/file
	insmod /lib/modules/3.0.8/g_file_storage.ko stall=0 file=/dev/mmcblk0p4 removable=1

	load_wifi_module
	
#	[ -d /mnt/cfg ] || mkdir -p /mnt/cfg
#	[ -d /mnt/user ] || mkdir -p /mnt/user
#	mount /dev/mmcblk0p2 /mnt/cfg
#	mount /dev/mmcblk0p3 /mnt/user

	/sbin/kmodloader

	# allow wifi modules time to settle
#	sleep 1

#	/sbin/wifi detect > /tmp/wireless.tmp
#	[ -s /tmp/wireless.tmp ] && {
#		cat /tmp/wireless.tmp >> /etc/config/wireless
#	}
#	rm -f /tmp/wireless.tmp

	uci_apply_defaults
	
	# temporary hack until configd exists
	/sbin/reload_config

	# create /dev/root if it doesn't exist
	[ -e /dev/root -o -h /dev/root ] || {
		rootdev=$(awk 'BEGIN { RS=" "; FS="="; } $1 == "root" { print $2 }' < /proc/cmdline)
		[ -n "$rootdev" ] && ln -s "$rootdev" /dev/root
	}

	#check mpset flag, if not mpset, use default ssid
	# maybe need TODO

	#check upgrade flag , if yes, use the user set
#	local upgrade=$(uci -c/mnt/cfg/etc/config get system.upgrade[0].status 2>/dev/null)
#	if [ "$upgrade" = "1" ]; then
#		cp -f /mnt/user/etc/config/* /etc/config/
#		uci -c/mnt/cfg/etc/config set system.upgrade[0].status=0
#		uci -c/mnt/cfg/etc/config commit system

#	fi
}
