diff -urN a/block.c b/block.c
--- a/block.c	2015-05-25 11:28:41.910195000 +0800
+++ b/block.c	2015-05-25 10:50:18.665854000 +0800
@@ -144,6 +144,12 @@
 	int32_t flag;
 };
 
+enum disk{
+	USB,
+	SD,
+	PRIVATE
+};
+
 #ifndef MS_DIRSYNC
 #	define MS_DIRSYNC		(1 << 7)
 #endif
@@ -179,6 +185,65 @@
 	{ "strictatime",	MS_STRICTATIME	},
 };
 
+static void bublle_sort(int a[],int n)
+{
+    int i,j,temp;
+    for(j=0;j<n-1;j++)
+       for(i=0;i<n-1-j;i++)
+          if(a[i]>a[i+1])
+		  {
+             temp=a[i];
+             a[i]=a[i+1];
+             a[i+1]=temp;
+          }
+}
+
+static int find_min_num_from_disk(enum disk type)
+{
+	char disk_type[3][24]={"USB-disk-","SD-disk-","Private-disk-"};
+	FILE *fp = fopen("/proc/mounts", "r");
+	char line[256];
+	int count = 0;
+	char *p1 = NULL;
+	char *p2 = NULL;
+	char *pdisk = disk_type[type];
+	int value[32];
+	int i = 0;
+	memset(value,0,sizeof(value));
+	if(!fp)
+		return -1;
+
+	while (fgets(line, sizeof(line), fp)) {
+		if(strstr(line,pdisk))
+		{
+			p1 = strstr(line," ");
+			p2 = strstr(p1+1," ");
+			*p2 = '\0';
+			value[count] = atoi(p1+1+9+strlen(disk_type[type]));
+			count++;
+		}
+	}
+	fclose(fp);
+	if(count == 0)
+		return 1;
+	else if(count == 1)
+	{	
+		return (value[0]-1>0 ? 1 : value[0]+1);
+	}
+	else
+	{
+		bublle_sort(value,count);
+		for(i = 0; i < count - 1; i++)
+		{
+			if(value[i] + 1 < value[i+1])
+			{
+				return (value[i] + 1);
+			}
+		}
+		return (value[count-1]+1);
+	}
+	
+}
 static char *blobmsg_get_strdup(struct blob_attr *attr)
 {
 	if (!attr)
@@ -772,22 +837,33 @@
 	if (anon_mount) {
 		char target[32] = "/mnt/mmcblk123";
 		int err = 0;
-
+		int num;
 		
-		snprintf(target, sizeof(target), "/mnt/%s", device);
+		//snprintf(target, sizeof(target), "/mnt/%s", device);
 		if(strstr(device,"sd") != NULL || strstr(device,"mmc") != NULL)
 		{
 			if(strstr(device,"sd") != NULL)
 			{	
+				num = find_min_num_from_disk(USB);
+				//ERROR("fffffffffffffffffff %d\n",num);
+				if(num == -1)
+				{
+					ERROR("find_min_num_from_disk error \n");
+					return -1;
+				}
 				memset(target,0,sizeof(target));
-				strcpy(target,"/tmp/mnt/USB-disk-");
-				strcat(target,device+2);
+				snprintf(target, sizeof(target), "/tmp/mnt/USB-disk-%d", num);
 			}
 			if(strstr(device,"mmc") != NULL)
 			{	
+				num = find_min_num_from_disk(SD);
+				if(num == -1)
+				{
+					ERROR("find_min_num_from_disk error \n");
+					return -1;
+				}
 				memset(target,0,sizeof(target));
-				strcpy(target,"/tmp/mnt/SD-disk-");
-				strcat(target,device);
+				snprintf(target, sizeof(target), "/tmp/mnt/SD-disk-%d", num);
 			}
 		}	
 		mkdir_p(target);
@@ -801,10 +877,218 @@
 		}
 		else
 		{
-			snprintf(cmd, sizeof (cmd), "mount -t ufsd -o noatime,nls=utf8,force %s %s >/dev/null", pr->dev, target);
+			//snprintf(cmd, sizeof (cmd), "mount -t ufsd -o noatime,nls=utf8,force %s %s >/dev/null", pr->dev, target);
+			//err = system(cmd);
+			err = mount(pr->dev, target, "ufsd", MS_NOATIME, "force");
+			if(err)
+			{
+				//err = mount(pr->dev, target, pr->id->name, 0, "");
+			}
+		}
+		
+		
+		if (err)
+		{
+			if(strstr(device,"sd") != NULL || strstr(device,"mmc") != NULL)
+			{
+				memset(cmd,0,sizeof(cmd));
+				snprintf(cmd, sizeof (cmd), "rm -rf %s >/dev/null",target);
+				system(cmd);
+			}
+			ERROR("mounting %s (%s) as %s failed (%d) - %s\n",
+					pr->dev, pr->id->name, target, err, strerror(err));
+		}
+		else
+		{
+			//for update the folder time  when the fs is vfat
+			if (!strcmp(pr->id->name, "vfat"))
+			{
+				memset(cmd,0,sizeof(cmd));
+				snprintf(cmd, sizeof (cmd), "echo \"to_update_vfat_time\" >/%s/to_update_vfat_time",target);
+				system(cmd);
+				memset(cmd,0,sizeof(cmd));
+				snprintf(cmd, sizeof (cmd),  "rm -f /%s/to_update_vfat_time",target);
+				system(cmd);
+			}
+			else
+			{
+				//memset(cmd,0,sizeof(cmd));
+				//snprintf(cmd, sizeof (cmd), "rm -f /tmp/to_update_vfat_time");
+				//system(cmd);
+			}
+			handle_swapfiles(true);
+		}
+		return err;
+	}
+
+	return 0;
+}
+
+
+static int mymount_device(struct blkid_struct_probe *pr, int hotplug)
+{
+	struct mount *m;
+	char *device;
+	char cmd[1024];
+	if (!pr)
+		return -1;
+
+	device = basename(pr->dev);
+
+	if (!strcmp(pr->id->name, "swap")) {
+		if (hotplug && !auto_swap)
+			return -1;
+		m = find_swap(pr->uuid, pr->label, device);
+		if (m || anon_swap)
+			swapon(pr->dev, (m) ? (m->prio) : (0));
+
+		return 0;
+	}
+
+	if (hotplug && !auto_mount)
+		return -1;
+
+	if (find_mount_point(pr->dev)) {
+		ERROR("%s is already mounted\n", pr->dev);
+		return -1;
+	}
+
+	m = find_block(pr->uuid, pr->label, device, NULL);
+	if (m && m->extroot)
+		return -1;
+
+	if (m) {
+		char *target = m->target;
+		char _target[32];
+		int err = 0;
+
+		if (!target) {
+			snprintf(_target, sizeof(_target), "/mnt/%s", device);
+			target = _target;
+		}
+		if(strstr(device,"sd") != NULL || strstr(device,"mmc") != NULL)
+		{
+			if(strstr(device,"sd") != NULL)
+			{	
+				memset(_target,0,sizeof(_target));
+				strcpy(_target,"/tmp/mnt/USB-disk-");
+				strcat(_target,device+2);
+				target = _target;
+			}
+			if(strstr(device,"mmc") != NULL)
+			{	
+				memset(_target,0,sizeof(_target));
+				strcpy(_target,"/tmp/mnt/SD-disk-");
+				strcat(_target,device);
+				target = _target;
+			}
+		}
+		mkdir_p(target);
+
+		if (check_fs)
+			check_filesystem(pr);
+		
+		if ( strcmp(pr->id->name, "ntfs"))
+		{
+			err = mount(pr->dev, target, pr->id->name, m->flags,
+		    		(m->options) ? (m->options) : (""));
+			
+		}
+		else
+		{		
+			//const char fstype[]="ufsd";
+			//err = mount(pr->dev, target, fstype, m->flags,"noatime,nls=utf8,force");
+			snprintf(cmd, sizeof (cmd), "mount -t ufsd -o noatime,nls=utf8,force %s %s ", pr->dev, target);
 			err = system(cmd);
 			if(err)
 			{
+				//err = mount(pr->dev, target, pr->id->name, m->flags,
+		    	//	 (m->options) ? (m->options) : (""));
+			}
+		}
+		
+		if (err)
+		{
+			if(strstr(device,"sd") != NULL || strstr(device,"mmc") != NULL)
+			{
+				memset(cmd,0,sizeof(cmd));
+				snprintf(cmd, sizeof (cmd), "rm -rf %s >/dev/null",target);
+				system(cmd);
+			}
+			ERROR("mounting %s (%s) as %s failed (%d) - %s\n",
+					pr->dev, pr->id->name, target, err, strerror(err));
+		}
+		else
+		{		
+			//for update the folder time  when the fs is vfat
+			if (!strcmp(pr->id->name, "vfat"))
+			{
+				memset(cmd,0,sizeof(cmd));
+				snprintf(cmd, sizeof (cmd), "echo \"to_update_vfat_time\" >/%s/to_update_vfat_time",target);
+				system(cmd);
+				memset(cmd,0,sizeof(cmd));
+				snprintf(cmd, sizeof (cmd),  "rm -f /%s/to_update_vfat_time",target);
+				system(cmd);
+			}
+			else
+			{
+				//memset(cmd,0,sizeof(cmd));
+				//snprintf(cmd, sizeof (cmd), "rm -f /tmp/to_update_vfat_time");
+				//system(cmd);
+			}
+			handle_swapfiles(true);
+		}
+		return err;
+	}
+
+	if (anon_mount) {
+		char target[32] = "/mnt/mmcblk123";
+		int err = 0;
+		int num;
+		
+		//snprintf(target, sizeof(target), "/mnt/%s", device);
+		if(strstr(device,"sd") != NULL || strstr(device,"mmc") != NULL)
+		{
+			if(strstr(device,"sd") != NULL)
+			{	
+				num = find_min_num_from_disk(PRIVATE);
+				//ERROR("fffffffffffffffffff %d\n",num);
+				if(num == -1)
+				{
+					ERROR("find_min_num_from_disk error \n");
+					return -1;
+				}
+				memset(target,0,sizeof(target));
+				snprintf(target, sizeof(target), "/tmp/mnt/Private-disk-%d", num);
+			}
+			if(strstr(device,"mmc") != NULL)
+			{	
+				num = find_min_num_from_disk(SD);
+				if(num == -1)
+				{
+					ERROR("find_min_num_from_disk error \n");
+					return -1;
+				}
+				memset(target,0,sizeof(target));
+				snprintf(target, sizeof(target), "/tmp/mnt/SD-disk-%d", num);
+			}
+		}	
+		mkdir_p(target);
+
+		if (check_fs)
+			check_filesystem(pr);
+
+		if (strcmp(pr->id->name, "ntfs"))
+		{
+			err = mount(pr->dev, target, pr->id->name, 0, "");
+		}
+		else
+		{
+			//snprintf(cmd, sizeof (cmd), "mount -t ufsd -o noatime,nls=utf8,force %s %s >/dev/null", pr->dev, target);
+			//err = system(cmd);
+			err = mount(pr->dev, target, "ufsd", MS_NOATIME, "force");
+			if(err)
+			{
 				//err = mount(pr->dev, target, pr->id->name, 0, "");
 			}
 		}
@@ -847,13 +1131,13 @@
 	return 0;
 }
 
+
 static int umount_device(struct blkid_struct_probe *pr)
 {
 	struct mount *m;
 	char *device = basename(pr->dev);
 	char *mp;
 	int err;
-	char target[32];
 	char cmd[64];
 	if (!pr)
 		return -1;
@@ -877,20 +1161,9 @@
 	{
 		if(strstr(device,"sd") != NULL || strstr(device,"mmc") != NULL)
 		{
-			if(strstr(device,"sd") != NULL)
-			{	
-				memset(target,0,sizeof(target));
-				strcpy(target,"/tmp/mnt/USB-disk-");
-				strcat(target,device+2);
-			}
-			if(strstr(device,"mmc") != NULL)
-			{	
-				memset(target,0,sizeof(target));
-				strcpy(target,"/tmp/mnt/SD-disk-");
-				strcat(target,device);
-			}
+			
 			memset(cmd,0,sizeof(cmd));
-			snprintf(cmd, sizeof (cmd), "rm -rf %s >/dev/null",target);
+			snprintf(cmd, sizeof (cmd), "rm -rf %s >/dev/null",mp);
 			system(cmd);
 		}
 		ERROR("unmounted %s (%s)\n",
@@ -904,7 +1177,6 @@
 {
 	char path[32];
 	char *action, *device, *mount_point;
-	char target[32];
 	char cmd[64];
 
 	action = getenv("ACTION");
@@ -927,20 +1199,8 @@
 		{
 			if(strstr(device,"sd") != NULL || strstr(device,"mmc") != NULL)
 			{
-				if(strstr(device,"sd") != NULL)
-				{	
-					memset(target,0,sizeof(target));
-					strcpy(target,"/tmp/mnt/USB-disk-");
-					strcat(target,device+2);
-				}
-				if(strstr(device,"mmc") != NULL)
-				{	
-					memset(target,0,sizeof(target));
-					strcpy(target,"/tmp/mnt/SD-disk-");
-					strcat(target,device);
-				}
 				memset(cmd,0,sizeof(cmd));
-				snprintf(cmd, sizeof (cmd), "rm -rf %s >/dev/null",target);
+				snprintf(cmd, sizeof (cmd), "rm -rf %s >/dev/null",mount_point);
 				system(cmd);
 			}
 		}
@@ -964,7 +1224,6 @@
 {
 	char path[32];
 	char *action, *device, *mount_point;
-	char target[32];
 	char cmd[64];
 
 	//action = getenv("ACTION");
@@ -989,20 +1248,8 @@
 		{
 			if(strstr(device,"sd") != NULL || strstr(device,"mmc") != NULL)
 			{
-				if(strstr(device,"sd") != NULL)
-				{	
-					memset(target,0,sizeof(target));
-					strcpy(target,"/tmp/mnt/USB-disk-");
-					strcat(target,device+2);
-				}
-				if(strstr(device,"mmc") != NULL)
-				{	
-					memset(target,0,sizeof(target));
-					strcpy(target,"/tmp/mnt/SD-disk-");
-					strcat(target,device);
-				}
 				memset(cmd,0,sizeof(cmd));
-				snprintf(cmd, sizeof (cmd), "rm -rf %s >/dev/null",target);
+				snprintf(cmd, sizeof (cmd), "rm -rf %s >/dev/null",mount_point);
 				system(cmd);
 			}
 		}
@@ -1018,7 +1265,7 @@
 		return -1;
 	cache_load(0);
 
-	return mount_device(find_block_info(NULL, NULL, path), 1);
+	return mymount_device(find_block_info(NULL, NULL, path), 1);
 }
 
 
